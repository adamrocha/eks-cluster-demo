name: EKS Cluster Demo CI

concurrency:
  group: terraform-state-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    # branches: [ actions ]
  pull_request:
    branches: [ actions ]

permissions:
  contents: read

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform:
    name: Terraform EKS
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '2.1.0'
      - name: Install dependencies
        run: poetry install
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.13.1'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: "${{ env.AWS_ACCESS_KEY_ID }}"
          aws-secret-access-key: "${{ env.AWS_SECRET_ACCESS_KEY }}"
          aws-region: "${{ env.AWS_REGION }}"
      - name: Health check AWS credentials
        run: aws sts get-caller-identity >/dev/null || { echo "Not authenticated with AWS"; exit 1; }
      - name: Terraform Format
        run: terraform fmt -check -recursive
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Plan
        run: terraform plan -input=false
      - name: Terraform Apply
        if: ${{ github.ref == 'refs/heads/test' || github.ref == 'refs/heads/actions' }}
        run: terraform apply -auto-approve -input=false
