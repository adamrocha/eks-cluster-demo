#!/usr/bin/env bash


if [ -f ~/.aws/config ]; then
  echo "AWS config file already exists."
else
mkdir -p ~/.aws
  cat > ~/.aws/config <<'EOF'
[default]
region = us-east-1
output = json

[profile prom_infradmin]
region = us-east-1
output = json
#credential_process = aws-pass-creds
EOF
echo "AWS config file created at ~/.aws/config."
fi

AWS_ACCESS_KEY_ID=$(pass aws/main/aws_access_key_id)
export AWS_ACCESS_KEY_ID

AWS_SECRET_ACCESS_KEY=$(pass aws/main/aws_secret_access_key)
export AWS_SECRET_ACCESS_KEY

export VAULT_ADDR='http://127.0.0.1:8200'

# Detect OS type
OS_TYPE="$(uname -s)"

# Function to install a package using the appropriate package manager
install_package() {
    local pkg="$1"
    if [[ "$OS_TYPE" == "Darwin" ]]; then
        if ! command -v brew &> /dev/null; then
            echo "Homebrew is not installed. Please install Homebrew first."
            exit 1
        fi
        brew install "$pkg"
    elif [[ "$OS_TYPE" == "Linux" ]]; then
        if command -v apt-get &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y "$pkg"
        elif command -v yum &> /dev/null; then
            sudo yum install -y "$pkg"
        else
            echo "No supported package manager found (apt-get or yum). Please install $pkg manually."
            exit 1
        fi
    else
        echo "Unsupported OS: $OS_TYPE"
        exit 1
    fi
}

# Check if AWS CLI is installed
if ! command -v aws --version &> /dev/null; then
    echo "AWS CLI is not installed. Installing it now..."
    if [[ "$OS_TYPE" == "Darwin" ]]; then
        install_package awscli
    elif [[ "$OS_TYPE" == "Linux" ]]; then
        install_package awscli
    fi
else
    echo "AWS CLI is already installed."
fi

# Check if the user is authenticated
if ! aws sts get-caller-identity &> /dev/null
then
    echo "You are not authenticated. Please configure your AWS CLI."
    exit
fi

# Check if session-manager-plugin is installed
if ! command -v session-manager-plugin --version &> /dev/null; then
    echo "session-manager-plugin is not installed. Installing it now..."
    if [[ "$OS_TYPE" == "Darwin" ]]; then
        brew install --cask session-manager-plugin
    elif [[ "$OS_TYPE" == "Linux" ]]; then
        # Official install instructions for Linux
        curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "/tmp/session-manager-plugin.deb"
        sudo dpkg -i /tmp/session-manager-plugin.deb
        rm /tmp/session-manager-plugin.deb
    fi
else
    echo "session-manager-plugin is already installed."
fi

# Check if kubectl is installed
if ! command -v kubectl --version &> /dev/null; then
    echo "kubectl is not installed. Installing it now..."
    install_package kubectl
else
    echo "kubectl is already installed."
fi

# Check if jq is installed
if ! command -v jq --version &> /dev/null; then
    echo "jq is not installed. Installing it now..."
    install_package jq
else
    echo "jq is already installed."
fi
