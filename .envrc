#!/usr/bin/env bash
set -euo pipefail

PROJECT_ROOT="$(git rev-parse --show-toplevel 2>/dev/null || pwd)"
export PROJECT_ROOT

OS_TYPE="$(uname -s)"
APT_UPDATED=0

# ------------------------------------------------------------
# Helpers
# ------------------------------------------------------------

apt_update_once() {
    if [[ $APT_UPDATED -eq 0 ]]; then
        sudo apt-get update -y >/dev/null
        APT_UPDATED=1
    fi
}

install_package() {
    local pkg="$1"
    case "$OS_TYPE" in
        Darwin)
            command -v brew >/dev/null 2>&1 || { echo "Install Homebrew first"; exit 1; }
            brew install "$pkg"
            ;;
        Linux)
            if command -v apt-get >/dev/null 2>&1; then
                apt_update_once
                sudo apt-get install -y "$pkg" >/dev/null
            elif command -v yum >/dev/null 2>&1; then
                sudo yum install -y "$pkg" >/dev/null
            else
                echo "Unsupported Linux package manager. Install $pkg manually."
                exit 1
            fi
            ;;
        *)
            echo "Unsupported OS: $OS_TYPE"
            exit 1
            ;;
    esac
}

install_hashicorp_tool() {
    local tool="$1"
    if ! command -v "$tool" >/dev/null 2>&1; then
        echo "Installing $tool..."
        if [[ "$OS_TYPE" == "Darwin" ]]; then
            brew tap hashicorp/tap >/dev/null 2>&1 || true
            brew install "hashicorp/tap/$tool"
        else
            # install_package "$tool"
            sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
            wget -O- https://apt.releases.hashicorp.com/gpg | \
            gpg --dearmor | \
            sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
            gpg --no-default-keyring \
            --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
            --fingerprint
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(grep -oP '(?<=UBUNTU_CODENAME=).*' /etc/os-release || lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt update && sudo apt-get install terraform -y
        fi
    else
        echo "$tool already installed."
    fi
}

ensure_command() {
    local cmd="$1"
    local pkg="${2:-$1}"
    if ! command -v "$cmd" >/dev/null 2>&1; then
        echo "Installing $cmd..."
        install_package "$pkg"
    else
        echo "$cmd already installed."
    fi
}

# ------------------------------------------------------------
# AWS CLI + Config
# ------------------------------------------------------------

ensure_command aws awscli

AWS_CONFIG="$HOME/.aws/config"
if [[ -f "$AWS_CONFIG" ]]; then
    echo "AWS config already exists at $AWS_CONFIG"
else
    mkdir -p "$HOME/.aws"
    cat > "$AWS_CONFIG" <<'EOF'
[default]
region = us-east-1
output = json

[profile prom_infradmin]
region = us-east-1
output = json
#credential_process = aws-pass-creds
EOF
    echo "AWS config created at $AWS_CONFIG"
fi

# ------------------------------------------------------------
# Session Manager Plugin
# ------------------------------------------------------------

# Check if session-manager-plugin is installed
if ! command -v session-manager-plugin --version &> /dev/null; then
    echo "session-manager-plugin is not installed. Installing it now..."
    if [[ "$OS_TYPE" == "Darwin" ]]; then
        brew install --cask session-manager-plugin
    elif [[ "$OS_TYPE" == "Linux" ]]; then
        ARCH="$(uname -m)"
        case "$ARCH" in
            x86_64|amd64)
                URL="https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb"
                ;;
            aarch64|arm64)
                URL="https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_arm64/session-manager-plugin.deb"
                ;;
            *)
                echo "Unsupported architecture: $ARCH"
                exit 1
                ;;
        esac
        curl -sSL "$URL" -o "/tmp/session-manager-plugin.deb"
        sudo dpkg -i /tmp/session-manager-plugin.deb || sudo apt-get install -f -y
        rm /tmp/session-manager-plugin.deb
    fi
else
    echo "session-manager-plugin is already installed."
fi

# ------------------------------------------------------------
# Tool Installs
# ------------------------------------------------------------

install_hashicorp_tool terraform
install_hashicorp_tool vault
ensure_command make
ensure_command kubectl
ensure_command jq
ensure_command docker docker.io docker-buildx
ensure_command helm
ensure_command pass

# ------------------------------------------------------------
# AWS Credentials (from pass)
# ------------------------------------------------------------

export AWS_ACCESS_KEY_ID="$(pass aws/dev/aws_access_key_id)"
export AWS_SECRET_ACCESS_KEY="$(pass aws/dev/aws_secret_access_key)"

if aws sts get-caller-identity &>/dev/null; then
    echo "Authenticated with AWS."
else
    echo "Not authenticated with AWS. Configure your AWS CLI."
    exit 1
fi

# ------------------------------------------------------------
# Vault Environment
# ------------------------------------------------------------

export VAULT_ADDR="$(pass vault/dev/address)"
export VAULT_TOKEN="$(pass vault/dev/token)"
